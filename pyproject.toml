[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "effigy"
version = "0.1.0"
description = "An opinionated, type-safe, Entity Framework-inspired ORM wrapper for SQLAlchemy."
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = ["orm", "sqlalchemy", "database", "entity-framework", "type-safe"]
authors = [
    { name = "David O'Neill", email = "doneill612@gmail.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dependencies = [
    "sqlalchemy[asyncio]>=2.0.0,<3.0.0",
    "typing-extensions>=4.8.0",
    "greenlet>=3.0.0",
    "attrs>=25.4.0"
]

[project.optional-dependencies]
dev = [
    "pydantic>=2.0.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "isort>=5.12.0"
]
migrations = [
    "alembic>=1.12.0"
]
postgres = [
    "psycopg2-binary>=2.9.0",
    "asyncpg>=0.29.0"
]
mysql = [
    "pymysql>=1.1.0",  
    "aiomysql>=0.2.0"
]
sqlite-async = [
    "aiosqlite>=0.19.0"
]
conventions = [
    "inflect>=7.0.0"
]
all = [
    "effigy[dev,migrations,postgres,mysql,sqlite-async,conventions]"
]

[project.urls]
Homepage = "https://github.com/doneill612/effigy"
Documentation = "https://github.com/doneill612/effigy#readme"
Repository = "https://github.com/doneill612/effigy"
"Bug Tracker" = "https://github.com/doneill612/effigy/issues"

[tool.hatch.version]
path = "src/effigy/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["src/effigy"]

[tool.hatch.build.targets.wheel.force-include]
"src/effigy/py.typed" = "effigy/py.typed"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=effigy",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "sqlalchemy.*"
ignore_missing_imports = false

[tool.ruff]
target-version = "py310"
line-length = 100
select = [
    "E",
    "W",
    "F",
    "I",
    "B",
    "C4",
    "UP",
    "ARG",
    "SIM",
]
ignore = [
    "E501",
    "B008",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["ARG"]


[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
